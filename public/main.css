/*!******************************************************************************************************************************************************!*\
  !*** css ./node_modules/css-loader/dist/cjs.js!./node_modules/postcss-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./styles/index.scss ***!
  \******************************************************************************************************************************************************/
.home__link__icon, .home__gallery, .home__wrapper, .home, .detail__button__icon, .detail__media__image, .detail, .collections__content, .collections__gallery__media__image, .collections__gallery, .collections__wrapper, .collections, .about__highlight__media__image, .about__gallery__media__image, .about__content__media__image, .navigation, .preloader {
  height: 100%;
  left: 0;
  position: absolute;
  top: 0;
  width: 100%;
}

.detail, .preloader {
  display: flex;
  align-items: center;
  justify-content: center;
}

.dg.ac {
  z-index: 99999 !important;
}

.navigation__list__link, .navigation__link {
  font-family: "George X";
  font-size: 3rem;
}

.detail__information__link {
  font-family: "George X";
  font-size: 4rem;
}

.preloader__text {
  font-family: "George X";
  font-size: 6.3rem;
}

.collections__article__title {
  font-family: "George X";
  font-size: 7rem;
}

.about__title {
  font-family: "George X";
  font-size: 11rem;
}

.detail__information__title {
  font-family: "George X";
  font-size: 13rem;
}

.about__highlight__title, .home__titles__title, .collections__titles__title {
  font-family: "George X";
  font-size: 21rem;
}

.detail__information__item__title, .detail__information__collection, .about__highlight__label, .about__content__label, .home__titles__label, .collections__titles__label {
  font-size: 1.4rem;
}

.home__link, .detail__button, .preloader__number {
  font-size: 1.6rem;
}

.detail__information__item__description, .detail__information__highlight__text, .collections__article__description, .about__content__description, body {
  font-size: 1.8rem;
  font-weight: 300;
}

.home__titles, .collections__titles {
  left: 50%;
  top: 50%;
  position: absolute;
  transform: translate(-50%, -50%) rotate(-90deg);
  display: flex;
  align-items: center;
  z-index: 0;
}

.home__titles__label, .collections__titles__label {
  margin: 0 3rem;
  text-transform: uppercase;
  transform: rotate(90deg);
  text-align: center;
}
@media (max-width: 767px) {
  .home__titles__label, .collections__titles__label {
    line-height: 1.5;
  }
}

.home__titles__title, .collections__titles__title {
  padding-top: 2rem;
}

@font-face {
  font-family: "George X";
  src: url(4ebbb3030565c4e47e88.woff2) format("woff2"), url(9970a15bf37723275850.woff) format("woff");
  font-weight: normal;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Suisse BP";
  src: url(c58d23281e489c1c1547.woff2) format("woff2"), url(08d9d05cb21c62aa6e77.woff) format("woff");
  font-weight: normal;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Suisse BP";
  src: url(adf2a66d8067dc06a190.woff2) format("woff2"), url(be056de8da3e6c8da1d2.woff) format("woff");
  font-weight: 200;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Suisse BP";
  src: url(ea417af60d699cef49fa.woff2) format("woff2"), url(d9760c64b65a67af9d42.woff) format("woff");
  font-weight: 300;
  font-style: normal;
  font-display: swap;
}
html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed,
figure, figcaption, footer, header, hgroup,
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline;
}

/* HTML5 display-role reset for older browsers */
article, aside, details, figcaption, figure,
footer, header, hgroup, menu, nav, section {
  display: block;
}

body {
  line-height: 1;
}

ol, ul {
  list-style: none;
}

blockquote, q {
  quotes: none;
}

blockquote:before, blockquote:after,
q:before, q:after {
  content: "";
  content: none;
}

table {
  border-collapse: collapse;
  border-spacing: 0;
}

*,
*:after,
*:before {
  box-sizing: border-box;
}

html {
  font-size: 0.40625vw;
}
@media (max-width: 767px) {
  html {
    font-size: 0.9333333333vw;
  }
}

body {
  font-family: "Suisse BP";
}

a {
  color: inherit;
  outline: none;
  text-decoration: none;
}

button {
  background: none;
  outline: inherit;
  outline: none;
  cursor: pointer;
  border: none;
}

img {
  vertical-align: middle;
}

.preloader {
  background-color: #C97164;
  color: #fff;
  text-align: center;
  display: none;
  z-index: 5;
}

.preloader__text {
  width: 77rem;
}

.preloader__number {
  position: absolute;
  bottom: 7.3rem;
  left: 50%;
  transform: translateX(-50%);
}

.navigation {
  color: #fff;
  height: 5.8rem;
  z-index: 3;
}

.navigation__link {
  height: 2rem;
  width: 9rem;
  position: absolute;
  top: 4rem;
  left: 4rem;
}
@media (max-width: 767px) {
  .navigation__link {
    font-size: 4rem;
  }
}

.navigation__link__icon {
  display: block;
}

.navigation__list__item {
  position: absolute;
  right: 4rem;
  top: 4rem;
}

@media (max-width: 767px) {
  .navigation__list__link {
    font-size: 4rem;
  }
}

.about {
  background-color: #B2B8C3;
  color: #37384C;
}

.about__title {
  text-align: center;
  max-width: 124rem;
  margin: auto;
}

.about__content {
  overflow: hidden;
}
.about__content:nth-of-type(4) {
  margin: 20rem 0 20rem 24.8rem;
}
.about__content:nth-of-type(4) .about__content__media {
  width: 96rem;
  height: 60rem;
}
.about__content:nth-of-type(6) {
  margin: 20rem 0 20rem -60rem;
}
.about__content:nth-of-type(6) .about__content__media {
  width: 84.2rem;
  height: 52rem;
}
.about__content:not(:nth-of-type(4)):not(:nth-of-type(6)) {
  margin: 20rem auto;
  width: 125.8rem;
}
.about__content:first-child {
  margin-top: 0;
}
.about__content:last-child {
  margin-bottom: 0;
}

.about__content__wrapper {
  display: flex;
  justify-content: center;
}
.about__content__wrapper.Right {
  flex-direction: row-reverse;
}
.about__content__wrapper.Right > .about__content__media {
  margin-right: 12.3rem;
}

.about__content__box {
  display: flex;
}

.about__content__label {
  text-transform: uppercase;
  width: 18rem;
}

.about__content__description {
  width: 36.2rem;
}
.about__content__description p:not(:first-child) {
  margin-top: 4rem;
}

.about__content__media {
  position: relative;
  width: 96rem;
  height: 76rem;
  position: relative;
  margin-left: 18rem;
}
.about__content__media--1 {
  width: 53.8rem;
  height: 80.8rem;
  position: relative;
  margin-left: 18rem;
}
.about__content__media--2 {
  width: 96rem;
  height: 60rem;
  position: relative;
  margin-left: 18rem;
}

.about__content__media__image {
  object-fit: cover;
}

.about__gallery {
  height: 84.6rem;
  position: relative;
  overflow: hidden;
  margin: 20rem 0;
}
.about__gallery:first-child {
  margin-top: 0;
}
.about__gallery:last-child {
  margin-bottom: 0;
}

.about__gallery__wrapper {
  display: flex;
  position: absolute;
  align-items: center;
  top: 50%;
  transform: translateY(-50%);
}

.about__gallery__media {
  height: 54.7rem;
  position: relative;
  margin: 0 4rem;
  width: 38.9rem;
}

.about__gallery__media__image {
  object-fit: cover;
}

.about__highlight {
  margin: 20rem 0;
  overflow: hidden;
}
.about__highlight:first-child {
  margin-top: 0;
}
.about__highlight:last-child {
  margin-bottom: 0;
}
.about__highlight:nth-child(4) {
  margin-top: -35rem;
}
.about__highlight:nth-child(4) .about__hightlight__wrapper {
  width: 90.3rem;
  height: 104rem;
}
.about__highlight:nth-child(4) .about__hightlight__wrapper .about__highlight__media {
  height: 52.8rem;
  width: 36rem;
  position: absolute;
}
.about__highlight:nth-child(4) .about__hightlight__wrapper .about__highlight__title {
  top: 36%;
  left: 62%;
  text-transform: lowercase;
}

.about__hightlight__wrapper {
  position: relative;
  width: 144rem;
  height: 105.6rem;
  margin: 0 auto;
}

.about__highlight__label {
  text-transform: uppercase;
  position: absolute;
  top: 8rem;
  left: 50%;
  transform: translateX(-50%);
  width: 9.6rem;
  text-align: center;
}

.about__highlight__title {
  padding-bottom: 2rem;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%) rotate(-90deg);
}

.about__highlight__media {
  height: 76.12rem;
  width: 54rem;
  position: absolute;
}
.about__highlight__media:not(:last-child) {
  top: 0;
  left: 0;
}
.about__highlight__media:last-child {
  right: 0;
  bottom: 0;
}

.about__highlight__media__image {
  object-fit: cover;
}

.collections {
  background-color: #BC978C;
  color: #F9F1E7;
}

.collections__wrapper {
  overflow: hidden;
}

.collections__gallery__wrapper {
  display: flex;
  align-items: center;
  top: 50%;
  position: absolute;
  transform: translateY(-50%);
}

.collections__gallery__link {
  display: block;
  margin: 0 5.3rem;
}

.collections__gallery__media {
  width: 44.7rem;
  height: 63.1rem;
  position: relative;
}

.collections__gallery__media__image {
  object-fit: cover;
}

.collections__article {
  position: absolute;
  left: 8rem;
  bottom: 8rem;
  opacity: 0;
}
.collections__article--active {
  opacity: 1;
}

.collections__article__description {
  max-width: 46rem;
  line-height: 1.4;
}

.detail {
  background-color: #BC978C;
}

.detail__wrapper {
  display: flex;
  align-items: center;
}
@media (max-width: 767px) {
  .detail__wrapper {
    flex-direction: column;
    align-items: center;
  }
}

.detail__media {
  width: 55.4rem;
  height: 78.2rem;
  position: relative;
  margin-right: 8.3rem;
}
@media (max-width: 767px) {
  .detail__media {
    width: 68.4rem;
    height: 83.2rem;
    margin: 0;
  }
}

.detail__media__image {
  object-fit: cover;
}

.detail__information {
  color: #fff;
}
@media (max-width: 767px) {
  .detail__information {
    padding-top: 3rem;
  }
}

.detail__information__collection {
  margin-bottom: 3rem;
}
@media (max-width: 767px) {
  .detail__information__collection {
    font-size: 3rem;
  }
}

.detail__information__title {
  max-width: 43.2rem;
}
@media (max-width: 767px) {
  .detail__information__title {
    font-size: 8rem;
    max-width: 48.2rem;
  }
}

.detail__information__content {
  padding-left: 18rem;
}
@media (max-width: 767px) {
  .detail__information__content {
    padding: 0 5rem;
  }
}

.detail__information__highlight {
  display: flex;
  align-items: center;
  margin-top: 6.3rem;
}
.detail__information__highlight:not(:first-child) {
  margin-bottom: 4rem;
}
@media (max-width: 767px) {
  .detail__information__highlight {
    margin-top: 1rem;
  }
  .detail__information__highlight:not(:first-child) {
    margin-bottom: 2rem;
  }
}

.detail__information__highlight__icons {
  display: inline-block;
  border: 1px solid currentColor;
  border-radius: 50%;
  width: 4rem;
  height: 4rem;
  margin-right: 4.4rem;
  padding: 0.5rem;
}
@media (max-width: 767px) {
  .detail__information__highlight__icons {
    width: 5.5rem;
    height: 5.5rem;
    padding: 1rem;
  }
}

.detail__information__highlight__text {
  display: inline-block;
}
@media (max-width: 767px) {
  .detail__information__highlight__text {
    font-size: 2.8rem;
    width: 45rem;
  }
}

.detail__information__item {
  display: flex;
  margin-top: 6.3rem;
}

.detail__information__item__title {
  width: 5.9rem;
  margin-right: 4.2rem;
}
@media (max-width: 767px) {
  .detail__information__item__title {
    font-size: 2.8rem;
    margin-right: 8.2rem;
  }
}

.detail__information__item__description {
  display: inline-block;
  width: 71.9rem;
}
@media (max-width: 767px) {
  .detail__information__item__description {
    font-size: 2.8rem;
    width: 45rem;
  }
}

.detail__information__link {
  display: inline-block;
  margin-top: 3rem;
}
@media (max-width: 767px) {
  .detail__information__link {
    margin-top: 5rem;
    font-size: 5.2rem;
  }
}

.detail__button {
  width: 28.8rem;
  height: 6rem;
  color: #F9F1E7;
  display: flex;
  align-items: center;
  justify-content: center;
  position: absolute;
  bottom: 5rem;
  right: 40%;
  transform: translateX(-50%);
  text-align: center;
  text-transform: uppercase;
  z-index: 3;
}
@media (max-width: 767px) {
  .detail__button {
    height: 8rem;
    font-size: 2.3rem;
    bottom: 4rem;
    right: -14rem;
  }
}

.home {
  background-color: #C97164;
  color: #F9F1E7;
}
.home:before, .home:after {
  content: "";
  height: 24rem;
  width: 100%;
  position: absolute;
  z-index: 1;
  left: 0;
}
.home:before {
  background: linear-gradient(to bottom, rgb(201, 113, 100) 0%, rgba(255, 255, 255, 0) 100%);
  top: 0;
}
.home:after {
  background: linear-gradient(to top, rgb(201, 113, 100) 0%, rgba(255, 255, 255, 0) 100%);
  bottom: 0;
}

.home__wrapper {
  overflow: hidden;
}

.home__gallery__media {
  position: absolute;
  visibility: hidden;
}

.home__link {
  width: 28.8rem;
  height: 6rem;
  color: #F9F1E7;
  display: flex;
  align-items: center;
  justify-content: center;
  position: absolute;
  bottom: 5rem;
  left: 50%;
  transform: translateX(-50%);
  text-align: center;
  text-transform: uppercase;
  z-index: 3;
}
@media (max-width: 767px) {
  .home__link {
    font-size: 2.6rem;
    width: 50.8rem;
    height: 10rem;
  }
}

/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/